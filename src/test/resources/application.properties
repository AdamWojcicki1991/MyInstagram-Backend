# TEST H2 DATABASE CONFIGURATION
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:instagram_test;DB_CLOSE_DELAY=-1
spring.datasource.username=instagram_user
spring.datasource.password=instagram_password
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# MY INSTAGRAM CONFIGURATION
info.api.name=MyInstagram
info.api.address.street=Super Cool Street
info.api.address.town=Louisville
info.api.address.number=KY 88546
# EMAIL CONFIGURATION
spring.mail.host=smtp.gmail.com
spring.mail.port=587
#spring.mail.username= # PLEASE SPECIFY ADMIN EMAIL ADDRESS #
#spring.mail.password= # PLEASE SPECIFY ADMIN EMAIL PASSWORD #
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
# SUPPORT EMAIL
#support.mail= # PLEASE SPECIFY SUPPORT EMAIL ADDRESS #
# JWT Properties
jwt.expirationTime=3600000
# MAILBOXLAYER API CONFIGURATION
mailboxlayer.api.endpoint.prod=http://apilayer.net/api/check
#mailboxlayer.api.key=  # PLEASE CREATE ACCOUNT IN MAILBOXLAYER API SERVICE AND PASTE A VALID KEY #
# OPENWEATHER API CONFIGURATION
openweather.api.endpoint.prod=http://api.openweathermap.org/data/2.5/weather
#openweather.api.key= # PLEASE CREATE ACCOUNT IN OPENWEATHER API SERVICE AND PASTE A VALID KEY #
openweather.api.units=metric
openweather.api.lang=en
